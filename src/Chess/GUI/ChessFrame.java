/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Chess.GUI;

import Chess.Main.ChessController;
import Chess.Pieces.PieceColour;
import Chess.Main.Player;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class ChessFrame extends JFrame {

    /**
     * Creates new form ChessFrame
     */
    
    private ChessPanel chessPanel;
    private ChessController chessController;
    private int historyNum;
    private int boardNum;
    private final ImageIcon background;
    private final ImageIcon blurBackground;
    private final ImageIcon flipBackground;
    
    public ChessFrame() 
    {
        chessPanel = new ChessPanel(this);
        setTitle("Chess Game");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        background = new ImageIcon("Images/background4.png");
        blurBackground = new ImageIcon("Images/blur.png");
        flipBackground = new ImageIcon("Images/flipBlur.png");
        initComponents();
        pack();
        setLocationRelativeTo(null); // Center the frame on the screen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        singleButton = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        guestLogin1 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        gameList = new javax.swing.JList<>();
        loadHistoryButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gameList1 = new javax.swing.JList<>();
        saveGameButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        restartButton = new javax.swing.JButton();
        drawButton = new javax.swing.JButton();
        resignButton = new javax.swing.JButton();
        SaveGameButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        moveTextArea = new javax.swing.JTextArea();
        flipToggleButton = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        loadGameButton = new javax.swing.JButton();
        startNewGameButton = new javax.swing.JButton();
        forceQuitButton = new javax.swing.JButton();
        rematchButton = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rookButton = new javax.swing.JButton();
        queenButton = new javax.swing.JButton();
        knightButton = new javax.swing.JButton();
        bishopButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        loadLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        gameList2 = new javax.swing.JList<>();
        loadGame = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1 = chessPanel;
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        startButton1 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jLabel23 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        guestLogin2 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 371, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(960, 640));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(960, 640));

        jPanel11.setBackground(new java.awt.Color(51, 51, 51));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Welcome to Chess!");
        jPanel11.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 250, 40));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Multiplayer");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setBorder(null);

        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent evt) {
                jButton3.setForeground(Color.GRAY); // Change the text color to dim when hovered over
            }

            @Override
            public void mouseExited(MouseEvent evt) {
                jButton3.setForeground(Color.WHITE); // Restore the original text color when not hovered over
            }
        });
        jPanel11.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 180, 160, 35));

        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Load Game");
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setBorder(null);
        jButton8.setContentAreaFilled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jButton8.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent evt) {
                jButton8.setForeground(Color.GRAY);
            }

            @Override
            public void mouseExited(MouseEvent evt) {
                jButton8.setForeground(Color.WHITE);
            }
        });
        jPanel11.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 143, 35));

        jButton10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("History");
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setBorder(null);
        jButton10.setContentAreaFilled(false);
        jButton10.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent evt) {
                jButton10.setForeground(Color.GRAY);
            }

            @Override
            public void mouseExited(MouseEvent evt) {
                jButton10.setForeground(Color.WHITE);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 140, 143, 35));

        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Credits");
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setBorder(null);
        jButton12.setContentAreaFilled(false);
        jButton12.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent evt) {
                jButton12.setForeground(Color.GRAY);
            }

            @Override
            public void mouseExited(MouseEvent evt) {
                jButton12.setForeground(Color.WHITE);
            }
        });
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 143, 35));

        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("Quit");
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setBorder(null);
        jButton13.setContentAreaFilled(false);
        jButton13.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent evt) {
                jButton13.setForeground(Color.GRAY);
            }

            @Override
            public void mouseExited(MouseEvent evt) {
                jButton13.setForeground(Color.WHITE);
            }
        });
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 140, 143, 35));

        singleButton.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        singleButton.setForeground(new java.awt.Color(255, 255, 255));
        singleButton.setText("Singleplayer");
        singleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        singleButton.setBorder(null);

        singleButton.setContentAreaFilled(false);
        singleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleButtonActionPerformed(evt);
            }
        });
        singleButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent evt) {
                singleButton.setForeground(Color.GRAY); // Change the text color to dim when hovered over
            }

            @Override
            public void mouseExited(MouseEvent evt) {
                singleButton.setForeground(Color.WHITE); // Restore the original text color when not hovered over
            }
        });
        jPanel11.add(singleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 160, 35));

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(background);
        jPanel11.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 640));

        jTabbedPane1.addTab("tab1", jPanel11);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Login screen");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 140, 47));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Please enter both players name below:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, 248, 36));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Player 1 Name :");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 200, 248, 22));

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Player 2 Name :");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 260, 248, 22));

        startButton.setForeground(new java.awt.Color(0, 0, 0));
        startButton.setText("Start Game");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        jPanel4.add(startButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, 105, -1));

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("OR");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 330, 25, 20));

        guestLogin1.setForeground(new java.awt.Color(0, 0, 0));
        guestLogin1.setText("Guest Login");
        guestLogin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestLogin1ActionPerformed(evt);
            }
        });
        jPanel4.add(guestLogin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, 110, -1));

        jTextPane1.setForeground(new java.awt.Color(0, 0, 0));
        jScrollPane7.setViewportView(jTextPane1);

        jPanel4.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, 250, -1));

        jTextPane2.setForeground(new java.awt.Color(0, 0, 0));
        jScrollPane8.setViewportView(jTextPane2);

        jPanel4.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 250, -1));

        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 430, -1, -1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(blurBackground);
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 640));

        jTabbedPane1.addTab("tab2", jPanel4);

        //jPanel5.setOpaque(false);
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane2.setOpaque(false);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel6.setOpaque(false);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("History games");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 27, 96, 35));

        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 464, 68, -1));

        gameList.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        gameList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Game 1", "Game 2", "Game 3", "Game 4", "Game 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        gameList.setFixedCellHeight(45);
        jScrollPane1.setViewportView(gameList);

        jPanel6.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 68, 267, 270));

        loadHistoryButton.setText("Load Game");
        loadHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadHistoryButtonActionPerformed(evt);
            }
        });
        jPanel6.add(loadHistoryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 356, -1, 30));

        nextButton.setText("Next move");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        nextButton.setVisible(false);
        jPanel6.add(nextButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 404, 120, 30));

        prevButton.setText("Previous Move");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });
        prevButton.setVisible(false);
        jPanel6.add(prevButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 404, 120, 30));

        jTabbedPane2.addTab("tab1", jPanel6);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Save Game");

        gameList1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        gameList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Game 1", "Game 2", "Game 3", "Game 4", "Game 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        gameList1.setFixedCellHeight(45);
        jScrollPane2.setViewportView(gameList1);

        saveGameButton.setText("Save Game");
        saveGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGameButtonActionPerformed(evt);
            }
        });

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel2.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(saveGameButton)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(saveGameButton)
                .addGap(44, 44, 44)
                .addComponent(jButton4)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab2", jPanel2);

        jPanel7.setOpaque(false);
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        restartButton.setText("Restart");
        restartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartButtonActionPerformed(evt);
            }
        });
        jPanel7.add(restartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 100, 38));

        drawButton.setText("Draw");
        drawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawButtonActionPerformed(evt);
            }
        });
        jPanel7.add(drawButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 100, 38));

        resignButton.setText("Resign");
        resignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resignButtonActionPerformed(evt);
            }
        });
        jPanel7.add(resignButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 100, 38));

        SaveGameButton2.setText("Save Game");
        SaveGameButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveGameButton2ActionPerformed(evt);
            }
        });
        jPanel7.add(SaveGameButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 100, 38));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Chess Moves:");
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 93, 23));

        moveTextArea.setColumns(20);
        moveTextArea.setRows(5);
        moveTextArea.setEditable(false);
        jScrollPane4.setViewportView(moveTextArea);

        jScrollPane4.setWheelScrollingEnabled(false);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER); // Disable horizontal scroll bar

        jPanel7.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 231, 204));

        flipToggleButton.setText("Flip Toggle");
        flipToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flipToggleButtonActionPerformed(evt);
            }
        });
        jPanel7.add(flipToggleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 110, -1));

        jButton1.setText("Quit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 100, 34));

        jTabbedPane2.addTab("tab3", jPanel7);

        jPanel8.setOpaque(false);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Thank you for playing!");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("                  Please select the following options:");

        loadGameButton.setText("Load Game");
        loadGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGameButtonActionPerformed(evt);
            }
        });

        startNewGameButton.setText("Start new game");
        startNewGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startNewGameButtonActionPerformed(evt);
            }
        });

        forceQuitButton.setText("Quit");
        forceQuitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forceQuitButtonActionPerformed(evt);
            }
        });

        rematchButton.setText("Rematch");
        rematchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rematchButtonActionPerformed(evt);
            }
        });

        jButton9.setText("History Games");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        ImageIcon icon = new ImageIcon("Images/Chess.png");
        Image image = icon.getImage();
        Image scaledImage = image.getScaledInstance(260, 220, Image.SCALE_SMOOTH);
        JLabel imageLabel = new JLabel(new ImageIcon(scaledImage));
        jLabel16 = imageLabel;

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(loadGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rematchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startNewGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(forceQuitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startNewGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rematchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forceQuitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jTabbedPane2.addTab("tab4", jPanel8);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Promotion:");

        rookButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        rookButton.setText("Rook");
        rookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rookButtonActionPerformed(evt);
            }
        });

        queenButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        queenButton.setText("Queen");
        queenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queenButtonActionPerformed(evt);
            }
        });

        knightButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        knightButton.setText("Knight");
        knightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knightButtonActionPerformed(evt);
            }
        });

        bishopButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        bishopButton.setText("Bishop");
        bishopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bishopButtonActionPerformed(evt);
            }
        });

        ImageIcon icon3 = new ImageIcon("Images/Chess2.png");
        Image image3 = icon3.getImage();
        Image scaledImage3 = image3.getScaledInstance(273, 155, image3.SCALE_SMOOTH);
        JLabel imageLabel3 = new JLabel(new ImageIcon(scaledImage3));
        jLabel17 = imageLabel3;

        jPanel9.setOpaque(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(queenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bishopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(knightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bishopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(knightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab5", jPanel9);

        loadLabel.setForeground(new java.awt.Color(255, 255, 255));
        loadLabel.setText("Load Game");

        gameList2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        gameList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Game 1", "Game 2", "Game 3", "Game 4", "Game 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        gameList2.setFixedCellHeight(45);
        jScrollPane3.setViewportView(gameList2);

        loadGame.setText("Load Game");
        loadGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGameActionPerformed(evt);
            }
        });

        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jPanel10.setOpaque(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(loadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loadGame)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3))
                        .addGap(48, 48, 48))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(loadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loadGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(87, 87, 87))
        );

        jTabbedPane2.addTab("tab6", jPanel10);

        jPanel5.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, -30, -1, 600));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 513, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 514, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 240, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 280, 30));

        jLabel20.setIcon(flipBackground);
        jPanel5.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 640));

        jTabbedPane1.addTab("tab3", jPanel5);

        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Login screen");
        jPanel12.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 140, 47));

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Please enter your player name below:");
        jPanel12.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 248, 36));

        startButton1.setForeground(new java.awt.Color(0, 0, 0));
        startButton1.setText("Start Game");
        startButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButton1ActionPerformed(evt);
            }
        });
        jPanel12.add(startButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, 105, -1));

        jTextPane3.setForeground(new java.awt.Color(0, 0, 0));
        jScrollPane9.setViewportView(jTextPane3);

        jPanel12.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, 250, -1));

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Player 1 Name :");
        jPanel12.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 248, 22));

        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, -1, -1));

        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("OR");
        jPanel12.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 270, 25, 20));

        guestLogin2.setForeground(new java.awt.Color(0, 0, 0));
        guestLogin2.setText("Guest Login");
        guestLogin2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestLogin2ActionPerformed(evt);
            }
        });
        jPanel12.add(guestLogin2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, 110, -1));

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel25.setIcon(blurBackground);
        jPanel12.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 640));

        jTabbedPane1.addTab("tab4", jPanel12);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 960, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab5", jPanel13);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, 960, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
   
    // Allow user to login without typing a name, assign a default name of player 1 and player 2 for their names.
    private void guestLogin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestLogin1ActionPerformed
        String player1Name = "Player 1";
        String player2Name = "Player 2";
        chessPanel.setSinglePlayer(false);
        gameList1.setListData(setSavedGameInfo());
        gameList.setListData(setPlayersHistory());
        gameList2.setListData(setSavedGameInfo());
        jTextPane1.setText(player1Name);
        jTextPane2.setText(player2Name);
        chessController.setPlayers(player1Name, player2Name);
        switchTab2(2);
        switchTab(2);
        displayNames();
        repaint();
    }//GEN-LAST:event_guestLogin1ActionPerformed

    // Allow user to login using their names, assign their names to the Player object using the controller class.
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        String player1Name = jTextPane1.getText().trim();
        String player2Name = jTextPane2.getText().trim();
        gameList1.setListData(setSavedGameInfo());
        gameList.setListData(setPlayersHistory());
        gameList2.setListData(setSavedGameInfo());
        if (player1Name.isEmpty() || player2Name.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please enter both names.", "Error", JOptionPane.ERROR_MESSAGE);
        } else
        {
            chessPanel.setSinglePlayer(false);
            switchTab2(2);
            chessController.setPlayers(player1Name, player2Name);
            getjTabbedPane2().setSelectedIndex(2);
            displayNames();
            repaint();
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        switchTab2(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        switchTab2(1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        switchTab(5);
        gameList1.setListData(setSavedGameInfo());
        gameList2.setListData(setSavedGameInfo());
        switchTab2(2);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        System.out.println("Thank you for playing! :)");
        System.exit(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void singleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleButtonActionPerformed
        switchTab2(3);
        
    }//GEN-LAST:event_singleButtonActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        backToMainScreen();
    }//GEN-LAST:event_jButton7ActionPerformed

    // load Game if the user has selected a game from the text area
    private void loadGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGameActionPerformed
        if(gameList2.isSelectionEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please select a game!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            chessPanel.resetGame();
            int selectedGameIndex = gameList2.getSelectedIndex();
            ++selectedGameIndex;
            chessController.loadSavedGame(selectedGameIndex);
            try
            {
                ResultSet resultSet = chessController.getSavedGameInfo(selectedGameIndex);
                if(resultSet.next())
                {
                    String player1Name = resultSet.getString(1);
                    String player2Name = resultSet.getString(2);
                    
                    if(resultSet.getInt(4) != 0)
                    {
                        System.out.println("Single player.");
                        chessPanel.setSinglePlayer(true);
                    }
                    chessController.setPlayers(player1Name, player2Name);
                }
            }
            catch (SQLException ex)
            {
                Logger.getLogger(ChessFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            switchTab(2);
            displayNames();
            chessPanel.repaint();
        }
    }//GEN-LAST:event_loadGameActionPerformed

    // Load history from table
    private void loadHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        if(gameList.isSelectionEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please select a game!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            this.boardNum = 0;
            chessPanel.resetGame();
            chessPanel.setGameEnded(true);
            nextButton.setVisible(true);
            prevButton.setVisible(true);
            this.historyNum = gameList.getSelectedIndex()+1;
            chessController.getGameHistoryInfo(historyNum);
            try 
            {
                ResultSet resultSet = chessController.getGameHistoryInfo(historyNum);
                if(resultSet.next())
                {
                    String player1Name = resultSet.getString(1);
                    String player2Name = resultSet.getString(2);
                    chessController.setPlayers(player1Name, player2Name);
                }
                prevButton.setEnabled(false);
                nextButton.setEnabled(true);
                if(this.boardNum + 1 > chessController.getMaxMoves()) {
                    nextButton.setEnabled(false);
                }
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(ChessFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            chessController.loadHistoryGameBoard(historyNum, boardNum);
            displayNames();
            chessPanel.repaint();
        }
    }
    
    private void bishopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bishopButtonActionPerformed
        chessController.promotePawn("B");
        chessPanel.setGameEnded(false);
        chessPanel.setPromotionPending(false);
        switchTab(2);
        repaint();
    }//GEN-LAST:event_bishopButtonActionPerformed

    private void knightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knightButtonActionPerformed
        chessController.promotePawn("N");
        chessPanel.setGameEnded(false);
        chessPanel.setPromotionPending(false);
        switchTab(2);
        repaint();
    }//GEN-LAST:event_knightButtonActionPerformed

    private void queenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queenButtonActionPerformed
        chessController.promotePawn("Q");
        chessPanel.setGameEnded(false);
        chessPanel.setPromotionPending(false);
        switchTab(2);
        repaint();
    }//GEN-LAST:event_queenButtonActionPerformed

    private void rookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rookButtonActionPerformed
        chessController.promotePawn("R");
        chessPanel.setGameEnded(false);
        chessPanel.setPromotionPending(false);
        switchTab(2);
        repaint();
    }//GEN-LAST:event_rookButtonActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        gameList.setListData(setPlayersHistory());
        switchTab(0);
    }//GEN-LAST:event_jButton9ActionPerformed

    // Rematch button will reset the game but not the players. Also reset if the flag is switched because white starts first.
    private void rematchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rematchButtonActionPerformed
        getChessPanel().setFlipFlag(false);
        getChessPanel().setToggleSwitch(false);
        flipToggleButton.setSelected(false);
        restartGame();
        switchTab(2);
    }//GEN-LAST:event_rematchButtonActionPerformed

    // Close data base connections and then closes the program.
    private void forceQuitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forceQuitButtonActionPerformed
        chessController.quit();
        System.exit(0);
    }//GEN-LAST:event_forceQuitButtonActionPerformed

    // Goes back to main Screen
    private void startNewGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startNewGameButtonActionPerformed
        backToMainScreen();
    }//GEN-LAST:event_startNewGameButtonActionPerformed

    private void loadGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGameButtonActionPerformed
        switchTab(5);
    }//GEN-LAST:event_loadGameButtonActionPerformed

    private void flipToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flipToggleButtonActionPerformed
        getChessPanel().setToggleSwitch(flipToggleButton.isSelected());
        getChessPanel().repaint();
    }//GEN-LAST:event_flipToggleButtonActionPerformed

    // Goes to the save screen
    private void SaveGameButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveGameButton2ActionPerformed

        switchTab(1);
    }//GEN-LAST:event_SaveGameButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        backToMainScreen();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Resign and outputs a message confirmation and then set players to null, so they can not interact with the board.
    private void resignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resignButtonActionPerformed
        int response = JOptionPane.showConfirmDialog(null, chessController.getCurrentPlayer().getName() +", do you wish to resign?", "Resign", JOptionPane.YES_NO_OPTION);
        if(response == JOptionPane.YES_OPTION)
        {
            switchTab(3);
            chessController.resignGame();
            JOptionPane.showMessageDialog(null, chessController.getCurrentPlayer().getName()  + " has resigned. This game has ended via resignation");
            chessController.resetPlayers();
        }
    }//GEN-LAST:event_resignButtonActionPerformed

    // Draw and output a message confirmation and set players to null, so they can not interact with the board.
    private void drawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawButtonActionPerformed
        // Draw
        Player otherPlayer = (chessController.getCurrentPlayer() == chessController.getPlayerWhite()) ? chessController.getPlayerBlack() : chessController.getPlayerWhite();
        int response = JOptionPane.showConfirmDialog(null, chessController.getCurrentPlayer().getName()
            + " asks for a draw. " + otherPlayer.getName()  + ", do you accept the draw?", "Draw Proposal", JOptionPane.YES_NO_OPTION);

        if (response == JOptionPane.YES_OPTION) {
            switchTab(3);
            chessController.drawGame();
            JOptionPane.showMessageDialog(null, "The game has ended via draw.");
            chessController.resetPlayers();

        } else {
            JOptionPane.showMessageDialog(null, otherPlayer.getName()  + " has declined the draw.");
        }
    }//GEN-LAST:event_drawButtonActionPerformed

    private void restartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartButtonActionPerformed
        getChessPanel().setFlipFlag(false);
        getChessPanel().setToggleSwitch(false);
        flipToggleButton.setSelected(false);
        restartGame();
    }//GEN-LAST:event_restartButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        backToMainScreen();
    }//GEN-LAST:event_jButton4ActionPerformed

    // Save game if the user has selected a game from the text area.
    private void saveGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGameButtonActionPerformed
        if(gameList1.isSelectionEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please select a game!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            int selectedGameIndex = gameList1.getSelectedIndex();
            ++selectedGameIndex;
            chessController.saveGame(selectedGameIndex);

            gameList1.setListData(setSavedGameInfo());
            gameList.setListData(setPlayersHistory());
            gameList2.setListData(setSavedGameInfo());
            getjTabbedPane2().setSelectedIndex(3);
        }
    }//GEN-LAST:event_saveGameButtonActionPerformed

    // Go back a move to see their previous moves
    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        this.boardNum--;
        if(chessController.getMaxMoves() >= this.boardNum && this.boardNum >= 0)
        {
            nextButton.setEnabled(true);
            chessController.loadHistoryGameBoard(historyNum, boardNum);
            chessPanel.repaint();
        }
        if(this.boardNum - 1 < 0)
        {
            prevButton.setEnabled(false);
        }
    }//GEN-LAST:event_prevButtonActionPerformed

    // Go forward a move to see their next moves.
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed

        this.boardNum++;
        if(chessController.getMaxMoves() >= this.boardNum && this.boardNum >= 0)
        {
            prevButton.setEnabled(true);
            chessController.loadHistoryGameBoard(historyNum, boardNum);
            chessPanel.repaint();
        }
        if(this.boardNum + 1 > chessController.getMaxMoves())
        {
            nextButton.setEnabled(false);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

//GEN-FIRST:event_loadHistoryButtonActionPerformed
 
//GEN-LAST:event_loadHistoryButtonActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        backToMainScreen();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        switchTab(0);
        gameList.setListData(setPlayersHistory());
        switchTab2(2);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void guestLogin2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestLogin2ActionPerformed
        String player1Name = "Player 1";
        if (player1Name.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please enter your name.", "Error", JOptionPane.ERROR_MESSAGE);
        } else
        {
            chessPanel.setSinglePlayer(true);
            switchTab2(2);
            chessController.setPlayers(PieceColour.WHITE, player1Name);
            //chessController.setGameMode(1);
            switchTab(2);
            displayNames();
            jTextPane1.setText(player1Name);
            jTextPane2.setText(chessController.getPlayerBlack().getName());
            repaint();
        }
    }//GEN-LAST:event_guestLogin2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        backToMainScreen();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void startButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButton1ActionPerformed
        String player1Name = jTextPane3.getText().trim();
        if (player1Name.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please enter your name.", "Error", JOptionPane.ERROR_MESSAGE);
        } else
        {
            chessPanel.setSinglePlayer(true);
            switchTab2(2);
            chessController.setPlayers(PieceColour.WHITE, player1Name);
            //chessController.setGameMode(1);
            switchTab(2);
            displayNames();
            jTextPane1.setText(player1Name);
            jTextPane2.setText(chessController.getPlayerBlack().getName());
            repaint();
        }

    }//GEN-LAST:event_startButton1ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

   
    // Reset the whole game, calls the getChessPanel which uses the ChessController to reset the game.
    private void restartGame()
    {
        getMoveTextArea().setText("");
        getChessPanel().resetGame();
        getChessPanel().repaint();
    }
    
    // Allow users to switch to different pages
    public void switchTab(int tabIndex) 
    {
        getjTabbedPane2().setSelectedIndex(tabIndex);
    }
    
    public void switchTab2(int tabIndex) 
    {
        getjTabbedPane1().setSelectedIndex(tabIndex);
    }
    
    // Update text area with chess moves
    public void updateMovesTextArea(String moves) 
    {
        getMoveTextArea().append(moves);
        getMoveTextArea().setFont(new Font(Font.SANS_SERIF,Font.BOLD,17));
    }
    
    private void backToMainScreen()
    {
        jTextPane1.setText("");
        jTextPane2.setText("");
        flipToggleButton.setSelected(false);
        restartGame();
        jLabel3.setVisible(false);
        jLabel9.setVisible(false);
        chessController.resetPlayers();
        switchTab2(0);
    }
    
    // Display current players on the bottom of the chess board
    private void displayNames()
    {
        jLabel3.setText(chessController.getPlayerWhite().getName() + " playing as WHITE pieces");
        jLabel9.setText(chessController.getPlayerBlack().getName() + " playing as BLACK pieces");
        jLabel3.setVisible(true);
        jLabel9.setVisible(true);
    }
    
    // Save user info to the text list.
    private String[] setSavedGameInfo()
    {
        String list[] = {"Game 1: ","Game 2: ","Game 3: ","Game 4: ","Game 5: "};
        try 
        {
            for(int i = 1; i <= 5; i++)
            {
                int j = i - 1;
                ResultSet resultSet = chessController.getSavedGameInfo(i);
                if(resultSet.next())
                {
                    String player1Name = resultSet.getString(1);
                    String player2Name = resultSet.getString(2);
                    String Date = resultSet.getString(3);
                    list[j] = list[j] + " " + player1Name + "(W) " + player2Name + "(B): " + Date;
                }
            }
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ChessFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return list;
    }
    
     // Save user info to the text list.
    private String[] setPlayersHistory()
    {
        String list[] = {"","","","",""};
        try 
        {
            for(int i = 1; i <= 5; i++)
            {
                int j = i - 1;
                ResultSet resultSet = chessController.getGameHistoryInfo(i);
                if(resultSet.next())
                {
                    String player1Name = resultSet.getString(1);
                    String player2Name = resultSet.getString(2);
                    String outcome = resultSet.getString(3);
                    if(outcome.equalsIgnoreCase("ww"))
                    {
                        outcome = "White won";
                    }
                    else if(outcome.equalsIgnoreCase("bw"))
                    {
                        outcome = "Black won";
                    }
                    else if(outcome.equalsIgnoreCase("DD"))
                    {
                        outcome = "Draw";
                    }
                    String NumOfMoves = resultSet.getString(4);
                    String Date = resultSet.getString(5);
                    list[j] = list[j] + " " + player1Name + "(W) " + player2Name + "(B), " + outcome + ", " + NumOfMoves + " moves, " + Date;
                }
            }
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ChessFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return list;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChessFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChessFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChessFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChessFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() {
                ChessFrame chessFrame = new ChessFrame();
                ChessController Controller = new ChessController();
                chessFrame.setChessController(Controller);
                chessFrame.setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SaveGameButton2;
    private javax.swing.JButton bishopButton;
    private javax.swing.JButton drawButton;
    private javax.swing.JToggleButton flipToggleButton;
    private javax.swing.JButton forceQuitButton;
    private javax.swing.JList<String> gameList;
    private javax.swing.JList<String> gameList1;
    private javax.swing.JList<String> gameList2;
    private javax.swing.JButton guestLogin1;
    private javax.swing.JButton guestLogin2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JButton knightButton;
    private javax.swing.JButton loadGame;
    private javax.swing.JButton loadGameButton;
    private javax.swing.JButton loadHistoryButton;
    private javax.swing.JLabel loadLabel;
    private javax.swing.JTextArea moveTextArea;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton queenButton;
    private javax.swing.JButton rematchButton;
    private javax.swing.JButton resignButton;
    private javax.swing.JButton restartButton;
    private javax.swing.JButton rookButton;
    private javax.swing.JButton saveGameButton;
    private javax.swing.JButton singleButton;
    private javax.swing.JButton startButton;
    private javax.swing.JButton startButton1;
    private javax.swing.JButton startNewGameButton;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the chessPanel
     */
    public ChessPanel getChessPanel() {
        return chessPanel;
    }

    /**
     * @param chessPanel the chessPanel to set
     */
    public void setChessPanel(ChessPanel chessPanel) {
        this.chessPanel = chessPanel;
    }

    /**
     * @return the chessController
     */
    public ChessController getChessController() {
        return chessController;
    }

    /**
     * @param chessController the chessController to set
     */
    public void setChessController(ChessController chessController) {
        this.chessController = chessController;
    }

    /**
     * @return the moveTextArea
     */
    public javax.swing.JTextArea getMoveTextArea() {
        return moveTextArea;
    }

    /**
     * @return the jTabbedPane2
     */
    public javax.swing.JTabbedPane getjTabbedPane2() {
        return jTabbedPane2;
    }
    
    public javax.swing.JTabbedPane getjTabbedPane1() {
        return jTabbedPane1;
    }
}
